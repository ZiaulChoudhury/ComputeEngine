/*
 * Generated by Bluespec Compiler (build f2da894e)
 * 
 * On Sat Jul 17 19:53:59 IST 2021
 * 
 */

/* Generation options: */
#ifndef __mkCacheFIFOF_h__
#define __mkCacheFIFOF_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkCacheFIFOF module */
class MOD_mkCacheFIFOF : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST__unnamed_;
  MOD_Reg<tUInt64> INST_cache_0;
  MOD_Reg<tUInt64> INST_cache_1;
  MOD_Reg<tUInt64> INST_cache_2;
  MOD_Reg<tUInt64> INST_cache_3;
  MOD_Reg<tUInt64> INST_cache_4;
  MOD_Reg<tUInt64> INST_cache_5;
  MOD_Reg<tUInt64> INST_cache_6;
  MOD_Reg<tUInt64> INST_cache_7;
  MOD_BRAM<tUInt32,tUInt64,tUInt8> INST_mem_memory;
  MOD_Wire<tUInt8> INST_mem_pwClear;
  MOD_Wire<tUInt8> INST_mem_pwDequeue;
  MOD_Wire<tUInt8> INST_mem_pwEnqueue;
  MOD_Reg<tUWide> INST_mem_rCache;
  MOD_ConfigReg<tUInt32> INST_mem_rRdPtr;
  MOD_ConfigReg<tUInt32> INST_mem_rWrPtr;
  MOD_Wire<tUInt64> INST_mem_wDataIn;
  MOD_Wire<tUInt64> INST_mem_wDataOut;
 
 /* Constructor */
 public:
  MOD_mkCacheFIFOF(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_enQdeQ;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53;
  tUInt32 DEF_x__h1507;
  tUInt32 DEF_x__h1433;
 
 /* Local definitions */
 private:
  tUWide DEF_mem_rCache___d23;
  tUInt64 DEF_cache_0__h3608;
  tUInt8 DEF_mem_pwClear_whas____d1;
  tUWide DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66;
  tUWide DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65;
  tUWide DEF_cache_7_0_CONCAT_cache_6_9___d64;
  tUWide DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14;
  tUInt8 DEF_NOT_mem_pwClear_whas___d7;
 
 /* Rules */
 public:
  void RL_mem_portA();
  void RL_mem_portB();
  void RL_mem_portB_read_data();
 
 /* Methods */
 public:
  void METH_enq(tUInt64 ARG_enq_a);
  tUInt8 METH_RDY_enq();
  tUWide METH_enQdeQ(tUInt64 ARG_enQdeQ_a);
  tUInt8 METH_RDY_enQdeQ();
  tUInt64 METH_read();
  tUInt8 METH_RDY_read();
  void METH_clean();
  tUInt8 METH_RDY_clean();
  void METH_dummy();
  tUInt8 METH_RDY_dummy();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCacheFIFOF &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkCacheFIFOF &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkCacheFIFOF &backing);
};

#endif /* ifndef __mkCacheFIFOF_h__ */
