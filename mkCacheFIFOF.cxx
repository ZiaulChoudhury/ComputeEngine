/*
 * Generated by Bluespec Compiler (build 00185f79)
 * 
 * On Sun May 23 21:16:52 IST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkCacheFIFOF.h"


/* Constructor */
MOD_mkCacheFIFOF::MOD_mkCacheFIFOF(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST__unnamed_(simHdl, "_unnamed_", this, 9u, 0u, (tUInt8)0u),
    INST_cache_0(simHdl, "cache_0", this, 16u, 0u, (tUInt8)0u),
    INST_cache_1(simHdl, "cache_1", this, 16u, 0u, (tUInt8)0u),
    INST_cache_2(simHdl, "cache_2", this, 16u, 0u, (tUInt8)0u),
    INST_cache_3(simHdl, "cache_3", this, 16u, 0u, (tUInt8)0u),
    INST_cache_4(simHdl, "cache_4", this, 16u, 0u, (tUInt8)0u),
    INST_cache_5(simHdl, "cache_5", this, 16u, 0u, (tUInt8)0u),
    INST_cache_6(simHdl, "cache_6", this, 16u, 0u, (tUInt8)0u),
    INST_cache_7(simHdl, "cache_7", this, 16u, 0u, (tUInt8)0u),
    INST_mem_memory(simHdl, "mem_memory", this, (tUInt8)0u, 10u, 16u, 1024u, 2u),
    INST_mem_pwClear(simHdl, "mem_pwClear", this, 0u),
    INST_mem_pwDequeue(simHdl, "mem_pwDequeue", this, 0u),
    INST_mem_pwEnqueue(simHdl, "mem_pwEnqueue", this, 0u),
    INST_mem_rCache(simHdl, "mem_rCache", this, 28u, 44739242u, (tUInt8)0u),
    INST_mem_rRdPtr(simHdl, "mem_rRdPtr", this, 11u, 0u, (tUInt8)0u),
    INST_mem_rWrPtr(simHdl, "mem_rWrPtr", this, 11u, 0u, (tUInt8)0u),
    INST_mem_wDataIn(simHdl, "mem_wDataIn", this, 16u, (tUInt8)0u),
    INST_mem_wDataOut(simHdl, "mem_wDataOut", this, 16u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68(96u)
{
  PORT_enQdeQ.setSize(128u);
  PORT_enQdeQ.clear();
  symbol_count = 24u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkCacheFIFOF::init_symbols_0()
{
  init_symbol(&symbols[0u], "_unnamed_", SYM_MODULE, &INST__unnamed_);
  init_symbol(&symbols[1u], "cache_0", SYM_MODULE, &INST_cache_0);
  init_symbol(&symbols[2u], "cache_1", SYM_MODULE, &INST_cache_1);
  init_symbol(&symbols[3u], "cache_2", SYM_MODULE, &INST_cache_2);
  init_symbol(&symbols[4u], "cache_3", SYM_MODULE, &INST_cache_3);
  init_symbol(&symbols[5u], "cache_4", SYM_MODULE, &INST_cache_4);
  init_symbol(&symbols[6u], "cache_5", SYM_MODULE, &INST_cache_5);
  init_symbol(&symbols[7u], "cache_6", SYM_MODULE, &INST_cache_6);
  init_symbol(&symbols[8u], "cache_7", SYM_MODULE, &INST_cache_7);
  init_symbol(&symbols[9u], "enQdeQ", SYM_PORT, &PORT_enQdeQ, 128u);
  init_symbol(&symbols[10u], "mem_memory", SYM_MODULE, &INST_mem_memory);
  init_symbol(&symbols[11u], "mem_pwClear", SYM_MODULE, &INST_mem_pwClear);
  init_symbol(&symbols[12u], "mem_pwDequeue", SYM_MODULE, &INST_mem_pwDequeue);
  init_symbol(&symbols[13u], "mem_pwEnqueue", SYM_MODULE, &INST_mem_pwEnqueue);
  init_symbol(&symbols[14u], "mem_rCache", SYM_MODULE, &INST_mem_rCache);
  init_symbol(&symbols[15u], "mem_rRdPtr", SYM_MODULE, &INST_mem_rRdPtr);
  init_symbol(&symbols[16u], "mem_rWrPtr", SYM_MODULE, &INST_mem_rWrPtr);
  init_symbol(&symbols[17u], "mem_wDataIn", SYM_MODULE, &INST_mem_wDataIn);
  init_symbol(&symbols[18u], "mem_wDataOut", SYM_MODULE, &INST_mem_wDataOut);
  init_symbol(&symbols[19u], "RL_mem_portA", SYM_RULE);
  init_symbol(&symbols[20u], "RL_mem_portB", SYM_RULE);
  init_symbol(&symbols[21u], "RL_mem_portB_read_data", SYM_RULE);
  init_symbol(&symbols[22u], "x__h1504", SYM_DEF, &DEF_x__h1504, 11u);
  init_symbol(&symbols[23u], "x__h1652", SYM_DEF, &DEF_x__h1652, 11u);
}


/* Rule actions */

void MOD_mkCacheFIFOF::RL_mem_portA()
{
  tUInt8 DEF_NOT_mem_pwClear_whas_AND_mem_pwEnqueue_whas___d17;
  tUInt8 DEF_x__read_f__h1416;
  tUInt32 DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d18;
  tUInt32 DEF_x__h1482;
  tUInt32 DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rWrPtr_rea_ETC___d6;
  tUInt32 DEF_x__read_i__h1415;
  tUInt32 DEF_IF_mem_wDataIn_whas_THEN_mem_wDataIn_wget__0_B_ETC___d15;
  tUInt32 DEF_IF_mem_pwEnqueue_whas_THEN_IF_mem_wDataIn_whas_ETC___d16;
  tUInt8 DEF_x_BIT_0___h1421;
  tUInt32 DEF_x2__h1383;
  tUInt32 DEF_x_wget_i__h1409;
  tUInt8 DEF_mem_wDataIn_whas____d9;
  tUInt32 DEF_x__h1407;
  tUInt8 DEF_mem_pwEnqueue_whas____d2;
  tUInt8 DEF_mem_pwClear_whas_OR_mem_pwEnqueue_whas___d3;
  DEF_mem_pwEnqueue_whas____d2 = INST_mem_pwEnqueue.METH_whas();
  DEF_x__h1407 = INST_mem_wDataIn.METH_wget();
  DEF_x__h1504 = INST_mem_rWrPtr.METH_read();
  DEF_mem_pwClear_whas____d1 = INST_mem_pwClear.METH_whas();
  DEF_mem_pwClear_whas_OR_mem_pwEnqueue_whas___d3 = DEF_mem_pwClear_whas____d1 || DEF_mem_pwEnqueue_whas____d2;
  DEF_mem_wDataIn_whas____d9 = INST_mem_wDataIn.METH_whas();
  DEF_x_wget_i__h1409 = (tUInt32)(DEF_x__h1407 >> 1u);
  DEF_x2__h1383 = (tUInt32)(1023u & DEF_x__h1504);
  DEF_x_BIT_0___h1421 = (tUInt8)((tUInt8)1u & DEF_x__h1407);
  DEF_x__read_i__h1415 = DEF_mem_wDataIn_whas____d9 ? DEF_x_wget_i__h1409 : 0u;
  DEF_x__h1482 = 2047u & (DEF_x__h1504 + 1u);
  DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rWrPtr_rea_ETC___d6 = DEF_mem_pwClear_whas____d1 ? 0u : DEF_x__h1482;
  DEF_x__read_f__h1416 = DEF_mem_wDataIn_whas____d9 && DEF_x_BIT_0___h1421;
  DEF_IF_mem_wDataIn_whas_THEN_mem_wDataIn_wget__0_B_ETC___d15 = 65535u & ((DEF_x__read_i__h1415 << 1u) | (tUInt32)(DEF_x__read_f__h1416));
  DEF_IF_mem_pwEnqueue_whas_THEN_IF_mem_wDataIn_whas_ETC___d16 = DEF_IF_mem_wDataIn_whas_THEN_mem_wDataIn_wget__0_B_ETC___d15;
  DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d18 = 268435455u & (((((tUInt32)((tUInt8)1u)) << 27u) | (DEF_x__h1504 << 16u)) | DEF_IF_mem_wDataIn_whas_THEN_mem_wDataIn_wget__0_B_ETC___d15);
  DEF_NOT_mem_pwClear_whas___d7 = !DEF_mem_pwClear_whas____d1;
  DEF_NOT_mem_pwClear_whas_AND_mem_pwEnqueue_whas___d17 = DEF_NOT_mem_pwClear_whas___d7 && DEF_mem_pwEnqueue_whas____d2;
  if (DEF_mem_pwClear_whas_OR_mem_pwEnqueue_whas___d3)
    INST_mem_rWrPtr.METH_write(DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rWrPtr_rea_ETC___d6);
  if (DEF_NOT_mem_pwClear_whas___d7)
    INST_mem_memory.METH_a_put(DEF_mem_pwEnqueue_whas____d2,
			       DEF_x2__h1383,
			       DEF_IF_mem_pwEnqueue_whas_THEN_IF_mem_wDataIn_whas_ETC___d16);
  if (DEF_NOT_mem_pwClear_whas_AND_mem_pwEnqueue_whas___d17)
    INST_mem_rCache.METH_write(DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d18);
}

void MOD_mkCacheFIFOF::RL_mem_portB()
{
  tUInt32 DEF_IF_mem_pwDequeue_whas__9_THEN_mem_rRdPtr_read__ETC___d26;
  tUInt32 DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rRdPtr_rea_ETC___d23;
  tUInt32 DEF_x2__h1568;
  tUInt32 DEF_x__h1645;
  tUInt32 DEF_x2__h1586;
  tUInt8 DEF_mem_pwDequeue_whas____d19;
  tUInt8 DEF_mem_pwClear_whas_OR_mem_pwDequeue_whas__9___d20;
  DEF_mem_pwDequeue_whas____d19 = INST_mem_pwDequeue.METH_whas();
  DEF_x__h1652 = INST_mem_rRdPtr.METH_read();
  DEF_mem_pwClear_whas____d1 = INST_mem_pwClear.METH_whas();
  DEF_mem_pwClear_whas_OR_mem_pwDequeue_whas__9___d20 = DEF_mem_pwClear_whas____d1 || DEF_mem_pwDequeue_whas____d19;
  DEF_x__h1645 = 2047u & (DEF_x__h1652 + 1u);
  DEF_x2__h1586 = (tUInt32)(1023u & DEF_x__h1645);
  DEF_x2__h1568 = (tUInt32)(1023u & DEF_x__h1652);
  DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rRdPtr_rea_ETC___d23 = DEF_mem_pwClear_whas____d1 ? 0u : DEF_x__h1645;
  DEF_IF_mem_pwDequeue_whas__9_THEN_mem_rRdPtr_read__ETC___d26 = DEF_mem_pwDequeue_whas____d19 ? DEF_x2__h1586 : DEF_x2__h1568;
  DEF_NOT_mem_pwClear_whas___d7 = !DEF_mem_pwClear_whas____d1;
  if (DEF_mem_pwClear_whas_OR_mem_pwDequeue_whas__9___d20)
    INST_mem_rRdPtr.METH_write(DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rRdPtr_rea_ETC___d23);
  if (DEF_NOT_mem_pwClear_whas___d7)
    INST_mem_memory.METH_b_put((tUInt8)0u,
			       DEF_IF_mem_pwDequeue_whas__9_THEN_mem_rRdPtr_read__ETC___d26,
			       43690u);
}

void MOD_mkCacheFIFOF::RL_mem_portB_read_data()
{
  tUInt32 DEF_IF_mem_rCache_7_BIT_27_8_AND_mem_rCache_7_BITS_ETC___d34;
  tUInt32 DEF_x__h1739;
  tUInt32 DEF_x__h1771;
  tUInt32 DEF_mem_rCache___d27;
  DEF_mem_rCache___d27 = INST_mem_rCache.METH_read();
  DEF_x__h1771 = INST_mem_memory.METH_b_read();
  DEF_x__h1652 = INST_mem_rRdPtr.METH_read();
  DEF_x__h1739 = (tUInt32)(2047u & (DEF_mem_rCache___d27 >> 16u));
  DEF_IF_mem_rCache_7_BIT_27_8_AND_mem_rCache_7_BITS_ETC___d34 = (tUInt8)(DEF_mem_rCache___d27 >> 27u) && DEF_x__h1739 == DEF_x__h1652 ? (tUInt32)(65535u & DEF_mem_rCache___d27) : DEF_x__h1771;
  INST_mem_wDataOut.METH_wset(DEF_IF_mem_rCache_7_BIT_27_8_AND_mem_rCache_7_BITS_ETC___d34);
}


/* Methods */

void MOD_mkCacheFIFOF::METH_enq(tUInt32 ARG_enq_a)
{
  tUInt32 DEF_unnamed__5_PLUS_1___d53;
  tUInt8 DEF_NOT_unnamed__5_ULT_8_7___d54;
  tUInt8 DEF_unnamed__5_EQ_0_6_AND_unnamed__5_ULT_8_7___d38;
  tUInt8 DEF_unnamed__5_EQ_1_9_AND_unnamed__5_ULT_8_7___d40;
  tUInt8 DEF_unnamed__5_EQ_2_1_AND_unnamed__5_ULT_8_7___d42;
  tUInt8 DEF_unnamed__5_EQ_3_3_AND_unnamed__5_ULT_8_7___d44;
  tUInt8 DEF_unnamed__5_EQ_4_5_AND_unnamed__5_ULT_8_7___d46;
  tUInt8 DEF_unnamed__5_EQ_5_7_AND_unnamed__5_ULT_8_7___d48;
  tUInt8 DEF_unnamed__5_EQ_6_9_AND_unnamed__5_ULT_8_7___d50;
  tUInt8 DEF_unnamed__5_ULT_8___d37;
  tUInt8 DEF_unnamed__5_EQ_7_1_AND_unnamed__5_ULT_8_7___d52;
  tUInt32 DEF_x__h1902;
  DEF_x__h1902 = INST__unnamed_.METH_read();
  DEF_unnamed__5_ULT_8___d37 = DEF_x__h1902 < 8u;
  DEF_unnamed__5_EQ_7_1_AND_unnamed__5_ULT_8_7___d52 = DEF_x__h1902 == 7u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_EQ_6_9_AND_unnamed__5_ULT_8_7___d50 = DEF_x__h1902 == 6u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_EQ_5_7_AND_unnamed__5_ULT_8_7___d48 = DEF_x__h1902 == 5u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_EQ_4_5_AND_unnamed__5_ULT_8_7___d46 = DEF_x__h1902 == 4u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_EQ_3_3_AND_unnamed__5_ULT_8_7___d44 = DEF_x__h1902 == 3u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_EQ_2_1_AND_unnamed__5_ULT_8_7___d42 = DEF_x__h1902 == 2u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_EQ_1_9_AND_unnamed__5_ULT_8_7___d40 = DEF_x__h1902 == 1u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_EQ_0_6_AND_unnamed__5_ULT_8_7___d38 = DEF_x__h1902 == 0u && DEF_unnamed__5_ULT_8___d37;
  DEF_unnamed__5_PLUS_1___d53 = 511u & (DEF_x__h1902 + 1u);
  DEF_NOT_unnamed__5_ULT_8_7___d54 = !DEF_unnamed__5_ULT_8___d37;
  if (DEF_unnamed__5_EQ_0_6_AND_unnamed__5_ULT_8_7___d38)
    INST_cache_0.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_EQ_2_1_AND_unnamed__5_ULT_8_7___d42)
    INST_cache_2.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_EQ_1_9_AND_unnamed__5_ULT_8_7___d40)
    INST_cache_1.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_EQ_3_3_AND_unnamed__5_ULT_8_7___d44)
    INST_cache_3.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_EQ_5_7_AND_unnamed__5_ULT_8_7___d48)
    INST_cache_5.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_EQ_4_5_AND_unnamed__5_ULT_8_7___d46)
    INST_cache_4.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_EQ_6_9_AND_unnamed__5_ULT_8_7___d50)
    INST_cache_6.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_EQ_7_1_AND_unnamed__5_ULT_8_7___d52)
    INST_cache_7.METH_write(ARG_enq_a);
  if (DEF_unnamed__5_ULT_8___d37)
    INST__unnamed_.METH_write(DEF_unnamed__5_PLUS_1___d53);
  if (DEF_NOT_unnamed__5_ULT_8_7___d54)
    INST_mem_pwEnqueue.METH_wset();
  if (DEF_NOT_unnamed__5_ULT_8_7___d54)
    INST_mem_wDataIn.METH_wset(ARG_enq_a);
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_enq()
{
  tUInt8 DEF_CAN_FIRE_enq;
  tUInt8 PORT_RDY_enq;
  DEF_x__h1652 = INST_mem_rRdPtr.METH_read();
  DEF_x__h1504 = INST_mem_rWrPtr.METH_read();
  DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57 = !((2047u & (DEF_x__h1652 + 512u)) == DEF_x__h1504);
  DEF_CAN_FIRE_enq = DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57;
  PORT_RDY_enq = DEF_CAN_FIRE_enq;
  return PORT_RDY_enq;
}

tUWide MOD_mkCacheFIFOF::METH_enQdeQ(tUInt32 ARG_enQdeQ_a)
{
  tUInt32 DEF_cache_1__h3806;
  tUInt32 DEF_cache_2__h3752;
  tUInt32 DEF_cache_3__h3698;
  tUInt32 DEF_cache_4__h3644;
  tUInt32 DEF_cache_5__h3590;
  tUInt32 DEF_cache_6__h3536;
  tUInt32 DEF_cache_7__h3482;
  tUInt32 DEF_mem_wDataOut_wget____d65;
  DEF_mem_wDataOut_wget____d65 = INST_mem_wDataOut.METH_wget();
  DEF_cache_7__h3482 = INST_cache_7.METH_read();
  DEF_cache_6__h3536 = INST_cache_6.METH_read();
  DEF_cache_4__h3644 = INST_cache_4.METH_read();
  DEF_cache_5__h3590 = INST_cache_5.METH_read();
  DEF_cache_3__h3698 = INST_cache_3.METH_read();
  DEF_cache_2__h3752 = INST_cache_2.METH_read();
  DEF_cache_1__h3806 = INST_cache_1.METH_read();
  DEF_cache_0__h3866 = INST_cache_0.METH_read();
  DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68.build_concat(DEF_cache_7__h3482,
									    80u,
									    16u).set_bits_in_word(DEF_cache_6__h3536,
												  2u,
												  0u,
												  16u).build_concat(DEF_cache_5__h3590,
														    48u,
														    16u).set_bits_in_word(DEF_cache_4__h3644,
																	  1u,
																	  0u,
																	  16u).build_concat(DEF_cache_3__h3698,
																			    16u,
																			    16u).set_bits_in_word(DEF_cache_2__h3752,
																						  0u,
																						  0u,
																						  16u);
  PORT_enQdeQ.set_whole_word(DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68.get_whole_word(2u),
			     3u).set_whole_word(DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68.get_whole_word(1u),
						2u).build_concat(((((tUInt64)(DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68.get_whole_word(0u))) << 32u) | (((tUInt64)(DEF_cache_1__h3806)) << 16u)) | (tUInt64)(DEF_cache_0__h3866),
								 0u,
								 64u);
  INST_cache_0.METH_write(DEF_cache_1__h3806);
  INST_cache_2.METH_write(DEF_cache_3__h3698);
  INST_cache_1.METH_write(DEF_cache_2__h3752);
  INST_cache_3.METH_write(DEF_cache_4__h3644);
  INST_cache_5.METH_write(DEF_cache_6__h3536);
  INST_cache_4.METH_write(DEF_cache_5__h3590);
  INST_cache_6.METH_write(DEF_cache_7__h3482);
  INST_cache_7.METH_write(DEF_mem_wDataOut_wget____d65);
  INST_mem_pwDequeue.METH_wset();
  INST_mem_pwEnqueue.METH_wset();
  INST_mem_wDataIn.METH_wset(ARG_enQdeQ_a);
  return PORT_enQdeQ;
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_enQdeQ()
{
  tUInt8 DEF_CAN_FIRE_enQdeQ;
  tUInt8 PORT_RDY_enQdeQ;
  DEF_x__h1652 = INST_mem_rRdPtr.METH_read();
  DEF_x__h1504 = INST_mem_rWrPtr.METH_read();
  DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57 = !((2047u & (DEF_x__h1652 + 512u)) == DEF_x__h1504);
  DEF_CAN_FIRE_enQdeQ = DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57 && (!(DEF_x__h1652 == DEF_x__h1504) && INST_mem_wDataOut.METH_whas());
  PORT_RDY_enQdeQ = DEF_CAN_FIRE_enQdeQ;
  return PORT_RDY_enQdeQ;
}

tUInt32 MOD_mkCacheFIFOF::METH_read()
{
  tUInt32 PORT_read;
  DEF_cache_0__h3866 = INST_cache_0.METH_read();
  PORT_read = DEF_cache_0__h3866;
  return PORT_read;
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_read()
{
  tUInt8 DEF_CAN_FIRE_read;
  tUInt8 PORT_RDY_read;
  DEF_CAN_FIRE_read = (tUInt8)1u;
  PORT_RDY_read = DEF_CAN_FIRE_read;
  return PORT_RDY_read;
}

void MOD_mkCacheFIFOF::METH_clean()
{
  INST_mem_pwClear.METH_wset();
  INST__unnamed_.METH_write(0u);
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_clean()
{
  tUInt8 DEF_CAN_FIRE_clean;
  tUInt8 PORT_RDY_clean;
  DEF_CAN_FIRE_clean = (tUInt8)1u;
  PORT_RDY_clean = DEF_CAN_FIRE_clean;
  return PORT_RDY_clean;
}

void MOD_mkCacheFIFOF::METH_dummy()
{
  INST_mem_pwEnqueue.METH_wset();
  INST_mem_wDataIn.METH_wset(0u);
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_dummy()
{
  tUInt8 DEF_CAN_FIRE_dummy;
  tUInt8 PORT_RDY_dummy;
  DEF_x__h1652 = INST_mem_rRdPtr.METH_read();
  DEF_x__h1504 = INST_mem_rWrPtr.METH_read();
  DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57 = !((2047u & (DEF_x__h1652 + 512u)) == DEF_x__h1504);
  DEF_CAN_FIRE_dummy = DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57;
  PORT_RDY_dummy = DEF_CAN_FIRE_dummy;
  return PORT_RDY_dummy;
}


/* Reset routines */

void MOD_mkCacheFIFOF::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_mem_rWrPtr.reset_RST(ARG_rst_in);
  INST_mem_rRdPtr.reset_RST(ARG_rst_in);
  INST_mem_rCache.reset_RST(ARG_rst_in);
  INST_cache_7.reset_RST(ARG_rst_in);
  INST_cache_6.reset_RST(ARG_rst_in);
  INST_cache_5.reset_RST(ARG_rst_in);
  INST_cache_4.reset_RST(ARG_rst_in);
  INST_cache_3.reset_RST(ARG_rst_in);
  INST_cache_2.reset_RST(ARG_rst_in);
  INST_cache_1.reset_RST(ARG_rst_in);
  INST_cache_0.reset_RST(ARG_rst_in);
  INST__unnamed_.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkCacheFIFOF::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkCacheFIFOF::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST__unnamed_.dump_state(indent + 2u);
  INST_cache_0.dump_state(indent + 2u);
  INST_cache_1.dump_state(indent + 2u);
  INST_cache_2.dump_state(indent + 2u);
  INST_cache_3.dump_state(indent + 2u);
  INST_cache_4.dump_state(indent + 2u);
  INST_cache_5.dump_state(indent + 2u);
  INST_cache_6.dump_state(indent + 2u);
  INST_cache_7.dump_state(indent + 2u);
  INST_mem_memory.dump_state(indent + 2u);
  INST_mem_pwClear.dump_state(indent + 2u);
  INST_mem_pwDequeue.dump_state(indent + 2u);
  INST_mem_pwEnqueue.dump_state(indent + 2u);
  INST_mem_rCache.dump_state(indent + 2u);
  INST_mem_rRdPtr.dump_state(indent + 2u);
  INST_mem_rWrPtr.dump_state(indent + 2u);
  INST_mem_wDataIn.dump_state(indent + 2u);
  INST_mem_wDataOut.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkCacheFIFOF::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 27u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_mem_pwClear_whas___d7", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cache_0__h3866", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68", 96u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_pwClear_whas____d1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1504", 11u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1652", 11u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "enQdeQ", 128u);
  num = INST__unnamed_.dump_VCD_defs(num);
  num = INST_cache_0.dump_VCD_defs(num);
  num = INST_cache_1.dump_VCD_defs(num);
  num = INST_cache_2.dump_VCD_defs(num);
  num = INST_cache_3.dump_VCD_defs(num);
  num = INST_cache_4.dump_VCD_defs(num);
  num = INST_cache_5.dump_VCD_defs(num);
  num = INST_cache_6.dump_VCD_defs(num);
  num = INST_cache_7.dump_VCD_defs(num);
  num = INST_mem_memory.dump_VCD_defs(num);
  num = INST_mem_pwClear.dump_VCD_defs(num);
  num = INST_mem_pwDequeue.dump_VCD_defs(num);
  num = INST_mem_pwEnqueue.dump_VCD_defs(num);
  num = INST_mem_rCache.dump_VCD_defs(num);
  num = INST_mem_rRdPtr.dump_VCD_defs(num);
  num = INST_mem_rWrPtr.dump_VCD_defs(num);
  num = INST_mem_wDataIn.dump_VCD_defs(num);
  num = INST_mem_wDataOut.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkCacheFIFOF::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCacheFIFOF &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkCacheFIFOF::vcd_defs(tVCDDumpType dt, MOD_mkCacheFIFOF &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 96u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 11u);
    vcd_write_x(sim_hdl, num++, 11u);
    vcd_write_x(sim_hdl, num++, 128u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_NOT_mem_pwClear_whas___d7) != DEF_NOT_mem_pwClear_whas___d7)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_mem_pwClear_whas___d7, 1u);
	backing.DEF_NOT_mem_pwClear_whas___d7 = DEF_NOT_mem_pwClear_whas___d7;
      }
      ++num;
      if ((backing.DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57) != DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57, 1u);
	backing.DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57 = DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_cache_0__h3866) != DEF_cache_0__h3866)
      {
	vcd_write_val(sim_hdl, num, DEF_cache_0__h3866, 16u);
	backing.DEF_cache_0__h3866 = DEF_cache_0__h3866;
      }
      ++num;
      if ((backing.DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68) != DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68)
      {
	vcd_write_val(sim_hdl, num, DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68, 96u);
	backing.DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68 = DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68;
      }
      ++num;
      if ((backing.DEF_mem_pwClear_whas____d1) != DEF_mem_pwClear_whas____d1)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_pwClear_whas____d1, 1u);
	backing.DEF_mem_pwClear_whas____d1 = DEF_mem_pwClear_whas____d1;
      }
      ++num;
      if ((backing.DEF_x__h1504) != DEF_x__h1504)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1504, 11u);
	backing.DEF_x__h1504 = DEF_x__h1504;
      }
      ++num;
      if ((backing.DEF_x__h1652) != DEF_x__h1652)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1652, 11u);
	backing.DEF_x__h1652 = DEF_x__h1652;
      }
      ++num;
      if ((backing.PORT_enQdeQ) != PORT_enQdeQ)
      {
	vcd_write_val(sim_hdl, num, PORT_enQdeQ, 128u);
	backing.PORT_enQdeQ = PORT_enQdeQ;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_NOT_mem_pwClear_whas___d7, 1u);
      backing.DEF_NOT_mem_pwClear_whas___d7 = DEF_NOT_mem_pwClear_whas___d7;
      vcd_write_val(sim_hdl, num++, DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57, 1u);
      backing.DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57 = DEF_NOT_mem_rRdPtr_read__1_PLUS_512_5_EQ_mem_rWrPt_ETC___d57;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_cache_0__h3866, 16u);
      backing.DEF_cache_0__h3866 = DEF_cache_0__h3866;
      vcd_write_val(sim_hdl, num++, DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68, 96u);
      backing.DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68 = DEF_cache_7_4_CONCAT_cache_6_3_6_CONCAT_cache_5_2__ETC___d68;
      vcd_write_val(sim_hdl, num++, DEF_mem_pwClear_whas____d1, 1u);
      backing.DEF_mem_pwClear_whas____d1 = DEF_mem_pwClear_whas____d1;
      vcd_write_val(sim_hdl, num++, DEF_x__h1504, 11u);
      backing.DEF_x__h1504 = DEF_x__h1504;
      vcd_write_val(sim_hdl, num++, DEF_x__h1652, 11u);
      backing.DEF_x__h1652 = DEF_x__h1652;
      vcd_write_val(sim_hdl, num++, PORT_enQdeQ, 128u);
      backing.PORT_enQdeQ = PORT_enQdeQ;
    }
}

void MOD_mkCacheFIFOF::vcd_prims(tVCDDumpType dt, MOD_mkCacheFIFOF &backing)
{
  INST__unnamed_.dump_VCD(dt, backing.INST__unnamed_);
  INST_cache_0.dump_VCD(dt, backing.INST_cache_0);
  INST_cache_1.dump_VCD(dt, backing.INST_cache_1);
  INST_cache_2.dump_VCD(dt, backing.INST_cache_2);
  INST_cache_3.dump_VCD(dt, backing.INST_cache_3);
  INST_cache_4.dump_VCD(dt, backing.INST_cache_4);
  INST_cache_5.dump_VCD(dt, backing.INST_cache_5);
  INST_cache_6.dump_VCD(dt, backing.INST_cache_6);
  INST_cache_7.dump_VCD(dt, backing.INST_cache_7);
  INST_mem_memory.dump_VCD(dt, backing.INST_mem_memory);
  INST_mem_pwClear.dump_VCD(dt, backing.INST_mem_pwClear);
  INST_mem_pwDequeue.dump_VCD(dt, backing.INST_mem_pwDequeue);
  INST_mem_pwEnqueue.dump_VCD(dt, backing.INST_mem_pwEnqueue);
  INST_mem_rCache.dump_VCD(dt, backing.INST_mem_rCache);
  INST_mem_rRdPtr.dump_VCD(dt, backing.INST_mem_rRdPtr);
  INST_mem_rWrPtr.dump_VCD(dt, backing.INST_mem_rWrPtr);
  INST_mem_wDataIn.dump_VCD(dt, backing.INST_mem_wDataIn);
  INST_mem_wDataOut.dump_VCD(dt, backing.INST_mem_wDataOut);
}
