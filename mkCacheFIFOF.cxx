/*
 * Generated by Bluespec Compiler (build f2da894e)
 * 
 * On Sat Jul 17 19:53:59 IST 2021
 * 
 */
#include "bluesim_primitives.h"
#include "mkCacheFIFOF.h"


/* Literal declarations */
static unsigned int const UWide_literal_76_h2aaaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
									  2863311530u,
									  682u };
static tUWide const UWide_literal_76_h2aaaaaaaaaaaaaaaaaa(76u,
							  UWide_literal_76_h2aaaaaaaaaaaaaaaaaa_arr);


/* Constructor */
MOD_mkCacheFIFOF::MOD_mkCacheFIFOF(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST__unnamed_(simHdl, "_unnamed_", this, 9u, 0u, (tUInt8)0u),
    INST_cache_0(simHdl, "cache_0", this, 64u, 0llu, (tUInt8)0u),
    INST_cache_1(simHdl, "cache_1", this, 64u, 0llu, (tUInt8)0u),
    INST_cache_2(simHdl, "cache_2", this, 64u, 0llu, (tUInt8)0u),
    INST_cache_3(simHdl, "cache_3", this, 64u, 0llu, (tUInt8)0u),
    INST_cache_4(simHdl, "cache_4", this, 64u, 0llu, (tUInt8)0u),
    INST_cache_5(simHdl, "cache_5", this, 64u, 0llu, (tUInt8)0u),
    INST_cache_6(simHdl, "cache_6", this, 64u, 0llu, (tUInt8)0u),
    INST_cache_7(simHdl, "cache_7", this, 64u, 0llu, (tUInt8)0u),
    INST_mem_memory(simHdl, "mem_memory", this, (tUInt8)0u, 10u, 64u, 1024u, 2u),
    INST_mem_pwClear(simHdl, "mem_pwClear", this, 0u),
    INST_mem_pwDequeue(simHdl, "mem_pwDequeue", this, 0u),
    INST_mem_pwEnqueue(simHdl, "mem_pwEnqueue", this, 0u),
    INST_mem_rCache(simHdl,
		    "mem_rCache",
		    this,
		    76u,
		    bs_wide_tmp(76u).set_bits_in_word(UWide_literal_76_h2aaaaaaaaaaaaaaaaaa.get_bits_in_word32(2u,
													       0u,
													       12u),
						      2u,
						      0u,
						      12u).set_whole_word(UWide_literal_76_h2aaaaaaaaaaaaaaaaaa.get_whole_word(1u),
									  1u).set_whole_word(UWide_literal_76_h2aaaaaaaaaaaaaaaaaa.get_whole_word(0u),
											     0u),
		    (tUInt8)0u),
    INST_mem_rRdPtr(simHdl, "mem_rRdPtr", this, 11u, 0u, (tUInt8)0u),
    INST_mem_rWrPtr(simHdl, "mem_rWrPtr", this, 11u, 0u, (tUInt8)0u),
    INST_mem_wDataIn(simHdl, "mem_wDataIn", this, 64u, (tUInt8)0u),
    INST_mem_wDataOut(simHdl, "mem_wDataOut", this, 64u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_mem_rCache___d23(76u),
    DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66(384u),
    DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65(256u),
    DEF_cache_7_0_CONCAT_cache_6_9___d64(128u),
    DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14(76u)
{
  PORT_enQdeQ.setSize(512u);
  PORT_enQdeQ.clear();
  symbol_count = 24u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkCacheFIFOF::init_symbols_0()
{
  init_symbol(&symbols[0u], "_unnamed_", SYM_MODULE, &INST__unnamed_);
  init_symbol(&symbols[1u], "cache_0", SYM_MODULE, &INST_cache_0);
  init_symbol(&symbols[2u], "cache_1", SYM_MODULE, &INST_cache_1);
  init_symbol(&symbols[3u], "cache_2", SYM_MODULE, &INST_cache_2);
  init_symbol(&symbols[4u], "cache_3", SYM_MODULE, &INST_cache_3);
  init_symbol(&symbols[5u], "cache_4", SYM_MODULE, &INST_cache_4);
  init_symbol(&symbols[6u], "cache_5", SYM_MODULE, &INST_cache_5);
  init_symbol(&symbols[7u], "cache_6", SYM_MODULE, &INST_cache_6);
  init_symbol(&symbols[8u], "cache_7", SYM_MODULE, &INST_cache_7);
  init_symbol(&symbols[9u], "enQdeQ", SYM_PORT, &PORT_enQdeQ, 512u);
  init_symbol(&symbols[10u], "mem_memory", SYM_MODULE, &INST_mem_memory);
  init_symbol(&symbols[11u], "mem_pwClear", SYM_MODULE, &INST_mem_pwClear);
  init_symbol(&symbols[12u], "mem_pwDequeue", SYM_MODULE, &INST_mem_pwDequeue);
  init_symbol(&symbols[13u], "mem_pwEnqueue", SYM_MODULE, &INST_mem_pwEnqueue);
  init_symbol(&symbols[14u], "mem_rCache", SYM_MODULE, &INST_mem_rCache);
  init_symbol(&symbols[15u], "mem_rRdPtr", SYM_MODULE, &INST_mem_rRdPtr);
  init_symbol(&symbols[16u], "mem_rWrPtr", SYM_MODULE, &INST_mem_rWrPtr);
  init_symbol(&symbols[17u], "mem_wDataIn", SYM_MODULE, &INST_mem_wDataIn);
  init_symbol(&symbols[18u], "mem_wDataOut", SYM_MODULE, &INST_mem_wDataOut);
  init_symbol(&symbols[19u], "RL_mem_portA", SYM_RULE);
  init_symbol(&symbols[20u], "RL_mem_portB", SYM_RULE);
  init_symbol(&symbols[21u], "RL_mem_portB_read_data", SYM_RULE);
  init_symbol(&symbols[22u], "x__h1433", SYM_DEF, &DEF_x__h1433, 11u);
  init_symbol(&symbols[23u], "x__h1507", SYM_DEF, &DEF_x__h1507, 11u);
}


/* Rule actions */

void MOD_mkCacheFIFOF::RL_mem_portA()
{
  tUInt8 DEF_NOT_mem_pwClear_whas_AND_mem_pwEnqueue_whas___d13;
  tUInt32 DEF_x__h1411;
  tUInt32 DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rWrPtr_rea_ETC___d6;
  tUInt64 DEF_IF_mem_pwEnqueue_whas_THEN_IF_mem_wDataIn_whas_ETC___d12;
  tUInt64 DEF_x3__h1328;
  tUInt32 DEF_x2__h1327;
  tUInt64 DEF_x_wget__h1110;
  tUInt8 DEF_mem_pwEnqueue_whas____d2;
  tUInt8 DEF_mem_pwClear_whas_OR_mem_pwEnqueue_whas___d3;
  DEF_mem_pwEnqueue_whas____d2 = INST_mem_pwEnqueue.METH_whas();
  DEF_x_wget__h1110 = INST_mem_wDataIn.METH_wget();
  DEF_x__h1433 = INST_mem_rWrPtr.METH_read();
  DEF_mem_pwClear_whas____d1 = INST_mem_pwClear.METH_whas();
  DEF_mem_pwClear_whas_OR_mem_pwEnqueue_whas___d3 = DEF_mem_pwClear_whas____d1 || DEF_mem_pwEnqueue_whas____d2;
  DEF_x2__h1327 = (tUInt32)(1023u & DEF_x__h1433);
  DEF_x3__h1328 = INST_mem_wDataIn.METH_whas() ? DEF_x_wget__h1110 : 0llu;
  DEF_IF_mem_pwEnqueue_whas_THEN_IF_mem_wDataIn_whas_ETC___d12 = DEF_x3__h1328;
  DEF_x__h1411 = 2047u & (DEF_x__h1433 + 1u);
  DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rWrPtr_rea_ETC___d6 = DEF_mem_pwClear_whas____d1 ? 0u : DEF_x__h1411;
  DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14.build_concat(17592186044415llu & (((((tUInt64)((tUInt8)1u)) << 43u) | (((tUInt64)(DEF_x__h1433)) << 32u)) | (tUInt64)((tUInt32)(DEF_x3__h1328 >> 32u))),
									     32u,
									     44u).set_whole_word((tUInt32)(DEF_x3__h1328),
												 0u);
  DEF_NOT_mem_pwClear_whas___d7 = !DEF_mem_pwClear_whas____d1;
  DEF_NOT_mem_pwClear_whas_AND_mem_pwEnqueue_whas___d13 = DEF_NOT_mem_pwClear_whas___d7 && DEF_mem_pwEnqueue_whas____d2;
  if (DEF_mem_pwClear_whas_OR_mem_pwEnqueue_whas___d3)
    INST_mem_rWrPtr.METH_write(DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rWrPtr_rea_ETC___d6);
  if (DEF_NOT_mem_pwClear_whas___d7)
    INST_mem_memory.METH_a_put(DEF_mem_pwEnqueue_whas____d2,
			       DEF_x2__h1327,
			       DEF_IF_mem_pwEnqueue_whas_THEN_IF_mem_wDataIn_whas_ETC___d12);
  if (DEF_NOT_mem_pwClear_whas_AND_mem_pwEnqueue_whas___d13)
    INST_mem_rCache.METH_write(DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14);
}

void MOD_mkCacheFIFOF::RL_mem_portB()
{
  tUInt32 DEF_IF_mem_pwDequeue_whas__5_THEN_mem_rRdPtr_read__ETC___d22;
  tUInt32 DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rRdPtr_rea_ETC___d19;
  tUInt32 DEF_x2__h1460;
  tUInt32 DEF_x__h1500;
  tUInt32 DEF_x2__h1478;
  tUInt8 DEF_mem_pwDequeue_whas____d15;
  tUInt8 DEF_mem_pwClear_whas_OR_mem_pwDequeue_whas__5___d16;
  DEF_mem_pwDequeue_whas____d15 = INST_mem_pwDequeue.METH_whas();
  DEF_x__h1507 = INST_mem_rRdPtr.METH_read();
  DEF_mem_pwClear_whas____d1 = INST_mem_pwClear.METH_whas();
  DEF_mem_pwClear_whas_OR_mem_pwDequeue_whas__5___d16 = DEF_mem_pwClear_whas____d1 || DEF_mem_pwDequeue_whas____d15;
  DEF_x__h1500 = 2047u & (DEF_x__h1507 + 1u);
  DEF_x2__h1478 = (tUInt32)(1023u & DEF_x__h1500);
  DEF_x2__h1460 = (tUInt32)(1023u & DEF_x__h1507);
  DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rRdPtr_rea_ETC___d19 = DEF_mem_pwClear_whas____d1 ? 0u : DEF_x__h1500;
  DEF_IF_mem_pwDequeue_whas__5_THEN_mem_rRdPtr_read__ETC___d22 = DEF_mem_pwDequeue_whas____d15 ? DEF_x2__h1478 : DEF_x2__h1460;
  DEF_NOT_mem_pwClear_whas___d7 = !DEF_mem_pwClear_whas____d1;
  if (DEF_mem_pwClear_whas_OR_mem_pwDequeue_whas__5___d16)
    INST_mem_rRdPtr.METH_write(DEF_IF_mem_pwClear_whas_THEN_0_ELSE_mem_rRdPtr_rea_ETC___d19);
  if (DEF_NOT_mem_pwClear_whas___d7)
    INST_mem_memory.METH_b_put((tUInt8)0u,
			       DEF_IF_mem_pwDequeue_whas__5_THEN_mem_rRdPtr_read__ETC___d22,
			       12297829382473034410llu);
}

void MOD_mkCacheFIFOF::RL_mem_portB_read_data()
{
  tUInt64 DEF_IF_mem_rCache_3_BIT_75_4_AND_mem_rCache_3_BITS_ETC___d30;
  tUInt32 DEF_x__h1557;
  tUInt64 DEF_new_value__h1562;
  tUInt64 DEF_new_value__h1565;
  DEF_mem_rCache___d23 = INST_mem_rCache.METH_read();
  DEF_new_value__h1565 = INST_mem_memory.METH_b_read();
  DEF_x__h1507 = INST_mem_rRdPtr.METH_read();
  DEF_new_value__h1562 = primExtract64(64u, 76u, DEF_mem_rCache___d23, 32u, 63u, 32u, 0u);
  DEF_x__h1557 = DEF_mem_rCache___d23.get_bits_in_word32(2u, 0u, 11u);
  DEF_IF_mem_rCache_3_BIT_75_4_AND_mem_rCache_3_BITS_ETC___d30 = DEF_mem_rCache___d23.get_bits_in_word8(2u,
													11u,
													1u) && DEF_x__h1557 == DEF_x__h1507 ? DEF_new_value__h1562 : DEF_new_value__h1565;
  INST_mem_wDataOut.METH_wset(DEF_IF_mem_rCache_3_BIT_75_4_AND_mem_rCache_3_BITS_ETC___d30);
}


/* Methods */

void MOD_mkCacheFIFOF::METH_enq(tUInt64 ARG_enq_a)
{
  tUInt32 DEF_unnamed__1_PLUS_1___d49;
  tUInt8 DEF_NOT_unnamed__1_ULT_8_3___d50;
  tUInt8 DEF_unnamed__1_EQ_0_2_AND_unnamed__1_ULT_8_3___d34;
  tUInt8 DEF_unnamed__1_EQ_1_5_AND_unnamed__1_ULT_8_3___d36;
  tUInt8 DEF_unnamed__1_EQ_2_7_AND_unnamed__1_ULT_8_3___d38;
  tUInt8 DEF_unnamed__1_EQ_3_9_AND_unnamed__1_ULT_8_3___d40;
  tUInt8 DEF_unnamed__1_EQ_4_1_AND_unnamed__1_ULT_8_3___d42;
  tUInt8 DEF_unnamed__1_EQ_5_3_AND_unnamed__1_ULT_8_3___d44;
  tUInt8 DEF_unnamed__1_EQ_6_5_AND_unnamed__1_ULT_8_3___d46;
  tUInt8 DEF_unnamed__1_ULT_8___d33;
  tUInt8 DEF_unnamed__1_EQ_7_7_AND_unnamed__1_ULT_8_3___d48;
  tUInt32 DEF_x__h1708;
  DEF_x__h1708 = INST__unnamed_.METH_read();
  DEF_unnamed__1_ULT_8___d33 = DEF_x__h1708 < 8u;
  DEF_unnamed__1_EQ_7_7_AND_unnamed__1_ULT_8_3___d48 = DEF_x__h1708 == 7u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_EQ_6_5_AND_unnamed__1_ULT_8_3___d46 = DEF_x__h1708 == 6u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_EQ_5_3_AND_unnamed__1_ULT_8_3___d44 = DEF_x__h1708 == 5u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_EQ_4_1_AND_unnamed__1_ULT_8_3___d42 = DEF_x__h1708 == 4u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_EQ_3_9_AND_unnamed__1_ULT_8_3___d40 = DEF_x__h1708 == 3u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_EQ_2_7_AND_unnamed__1_ULT_8_3___d38 = DEF_x__h1708 == 2u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_EQ_1_5_AND_unnamed__1_ULT_8_3___d36 = DEF_x__h1708 == 1u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_EQ_0_2_AND_unnamed__1_ULT_8_3___d34 = DEF_x__h1708 == 0u && DEF_unnamed__1_ULT_8___d33;
  DEF_unnamed__1_PLUS_1___d49 = 511u & (DEF_x__h1708 + 1u);
  DEF_NOT_unnamed__1_ULT_8_3___d50 = !DEF_unnamed__1_ULT_8___d33;
  if (DEF_unnamed__1_EQ_0_2_AND_unnamed__1_ULT_8_3___d34)
    INST_cache_0.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_EQ_2_7_AND_unnamed__1_ULT_8_3___d38)
    INST_cache_2.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_EQ_1_5_AND_unnamed__1_ULT_8_3___d36)
    INST_cache_1.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_EQ_3_9_AND_unnamed__1_ULT_8_3___d40)
    INST_cache_3.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_EQ_5_3_AND_unnamed__1_ULT_8_3___d44)
    INST_cache_5.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_EQ_4_1_AND_unnamed__1_ULT_8_3___d42)
    INST_cache_4.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_EQ_6_5_AND_unnamed__1_ULT_8_3___d46)
    INST_cache_6.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_EQ_7_7_AND_unnamed__1_ULT_8_3___d48)
    INST_cache_7.METH_write(ARG_enq_a);
  if (DEF_unnamed__1_ULT_8___d33)
    INST__unnamed_.METH_write(DEF_unnamed__1_PLUS_1___d49);
  if (DEF_NOT_unnamed__1_ULT_8_3___d50)
    INST_mem_pwEnqueue.METH_wset();
  if (DEF_NOT_unnamed__1_ULT_8_3___d50)
    INST_mem_wDataIn.METH_wset(ARG_enq_a);
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_enq()
{
  tUInt8 PORT_RDY_enq;
  tUInt8 DEF_CAN_FIRE_enq;
  DEF_x__h1507 = INST_mem_rRdPtr.METH_read();
  DEF_x__h1433 = INST_mem_rWrPtr.METH_read();
  DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53 = !((2047u & (DEF_x__h1507 + 512u)) == DEF_x__h1433);
  DEF_CAN_FIRE_enq = DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53;
  PORT_RDY_enq = DEF_CAN_FIRE_enq;
  return PORT_RDY_enq;
}

tUWide MOD_mkCacheFIFOF::METH_enQdeQ(tUInt64 ARG_enQdeQ_a)
{
  tUInt64 DEF_x__h2852;
  tUInt64 DEF_cache_1__h3553;
  tUInt64 DEF_cache_2__h3499;
  tUInt64 DEF_cache_3__h3445;
  tUInt64 DEF_cache_4__h3391;
  tUInt64 DEF_cache_5__h3337;
  tUInt64 DEF_cache_6__h3283;
  tUInt64 DEF_cache_7__h3229;
  tUInt64 DEF_x_wget__h1211;
  DEF_x_wget__h1211 = INST_mem_wDataOut.METH_wget();
  DEF_cache_7__h3229 = INST_cache_7.METH_read();
  DEF_cache_6__h3283 = INST_cache_6.METH_read();
  DEF_cache_5__h3337 = INST_cache_5.METH_read();
  DEF_cache_3__h3445 = INST_cache_3.METH_read();
  DEF_cache_4__h3391 = INST_cache_4.METH_read();
  DEF_cache_2__h3499 = INST_cache_2.METH_read();
  DEF_cache_1__h3553 = INST_cache_1.METH_read();
  DEF_cache_0__h3608 = INST_cache_0.METH_read();
  DEF_x__h2852 = DEF_x_wget__h1211;
  DEF_cache_7_0_CONCAT_cache_6_9___d64.set_whole_word((tUInt32)(DEF_cache_7__h3229 >> 32u),
						      3u).build_concat((((tUInt64)((tUInt32)(DEF_cache_7__h3229))) << 32u) | (tUInt64)((tUInt32)(DEF_cache_6__h3283 >> 32u)),
								       32u,
								       64u).set_whole_word((tUInt32)(DEF_cache_6__h3283),
											   0u);
  DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9___d64.get_whole_word(3u),
									      7u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9___d64.get_whole_word(2u),
												 6u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9___d64.get_whole_word(1u),
														    5u).build_concat((((tUInt64)(DEF_cache_7_0_CONCAT_cache_6_9___d64.get_whole_word(0u))) << 32u) | (tUInt64)((tUInt32)(DEF_cache_5__h3337 >> 32u)),
																     96u,
																     64u).build_concat((((tUInt64)((tUInt32)(DEF_cache_5__h3337))) << 32u) | (tUInt64)((tUInt32)(DEF_cache_4__h3391 >> 32u)),
																		       32u,
																		       64u).set_whole_word((tUInt32)(DEF_cache_4__h3391),
																					   0u);
  DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(7u),
									      11u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(6u),
												  10u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(5u),
														      9u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(4u),
																	 8u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(3u),
																			    7u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(2u),
																					       6u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(1u),
																								  5u).build_concat((((tUInt64)(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65.get_whole_word(0u))) << 32u) | (tUInt64)((tUInt32)(DEF_cache_3__h3445 >> 32u)),
																										   96u,
																										   64u).build_concat((((tUInt64)((tUInt32)(DEF_cache_3__h3445))) << 32u) | (tUInt64)((tUInt32)(DEF_cache_2__h3499 >> 32u)),
																												     32u,
																												     64u).set_whole_word((tUInt32)(DEF_cache_2__h3499),
																															 0u);
  PORT_enQdeQ.set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(11u),
			     15u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(10u),
						 14u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(9u),
								     13u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(8u),
											 12u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(7u),
													     11u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(6u),
																 10u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(5u),
																		     9u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(4u),
																					8u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(3u),
																							   7u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(2u),
																									      6u).set_whole_word(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(1u),
																												 5u).build_concat((((tUInt64)(DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66.get_whole_word(0u))) << 32u) | (tUInt64)((tUInt32)(DEF_cache_1__h3553 >> 32u)),
																														  96u,
																														  64u).build_concat((((tUInt64)((tUInt32)(DEF_cache_1__h3553))) << 32u) | (tUInt64)((tUInt32)(DEF_cache_0__h3608 >> 32u)),
																																    32u,
																																    64u).set_whole_word((tUInt32)(DEF_cache_0__h3608),
																																			0u);
  INST_cache_0.METH_write(DEF_cache_1__h3553);
  INST_cache_1.METH_write(DEF_cache_2__h3499);
  INST_cache_2.METH_write(DEF_cache_3__h3445);
  INST_cache_4.METH_write(DEF_cache_5__h3337);
  INST_cache_3.METH_write(DEF_cache_4__h3391);
  INST_cache_5.METH_write(DEF_cache_6__h3283);
  INST_cache_6.METH_write(DEF_cache_7__h3229);
  INST_cache_7.METH_write(DEF_x__h2852);
  INST_mem_pwDequeue.METH_wset();
  INST_mem_wDataIn.METH_wset(ARG_enQdeQ_a);
  INST_mem_pwEnqueue.METH_wset();
  return PORT_enQdeQ;
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_enQdeQ()
{
  tUInt8 PORT_RDY_enQdeQ;
  tUInt8 DEF_CAN_FIRE_enQdeQ;
  DEF_x__h1507 = INST_mem_rRdPtr.METH_read();
  DEF_x__h1433 = INST_mem_rWrPtr.METH_read();
  DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53 = !((2047u & (DEF_x__h1507 + 512u)) == DEF_x__h1433);
  DEF_CAN_FIRE_enQdeQ = DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53 && (!(DEF_x__h1507 == DEF_x__h1433) && INST_mem_wDataOut.METH_whas());
  PORT_RDY_enQdeQ = DEF_CAN_FIRE_enQdeQ;
  return PORT_RDY_enQdeQ;
}

tUInt64 MOD_mkCacheFIFOF::METH_read()
{
  tUInt64 PORT_read;
  DEF_cache_0__h3608 = INST_cache_0.METH_read();
  PORT_read = DEF_cache_0__h3608;
  return PORT_read;
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_read()
{
  tUInt8 PORT_RDY_read;
  tUInt8 DEF_CAN_FIRE_read;
  DEF_CAN_FIRE_read = (tUInt8)1u;
  PORT_RDY_read = DEF_CAN_FIRE_read;
  return PORT_RDY_read;
}

void MOD_mkCacheFIFOF::METH_clean()
{
  INST_mem_pwClear.METH_wset();
  INST__unnamed_.METH_write(0u);
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_clean()
{
  tUInt8 PORT_RDY_clean;
  tUInt8 DEF_CAN_FIRE_clean;
  DEF_CAN_FIRE_clean = (tUInt8)1u;
  PORT_RDY_clean = DEF_CAN_FIRE_clean;
  return PORT_RDY_clean;
}

void MOD_mkCacheFIFOF::METH_dummy()
{
  INST_mem_pwEnqueue.METH_wset();
  INST_mem_wDataIn.METH_wset(0llu);
}

tUInt8 MOD_mkCacheFIFOF::METH_RDY_dummy()
{
  tUInt8 PORT_RDY_dummy;
  tUInt8 DEF_CAN_FIRE_dummy;
  DEF_x__h1507 = INST_mem_rRdPtr.METH_read();
  DEF_x__h1433 = INST_mem_rWrPtr.METH_read();
  DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53 = !((2047u & (DEF_x__h1507 + 512u)) == DEF_x__h1433);
  DEF_CAN_FIRE_dummy = DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53;
  PORT_RDY_dummy = DEF_CAN_FIRE_dummy;
  return PORT_RDY_dummy;
}


/* Reset routines */

void MOD_mkCacheFIFOF::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_mem_rWrPtr.reset_RST(ARG_rst_in);
  INST_mem_rRdPtr.reset_RST(ARG_rst_in);
  INST_mem_rCache.reset_RST(ARG_rst_in);
  INST_cache_7.reset_RST(ARG_rst_in);
  INST_cache_6.reset_RST(ARG_rst_in);
  INST_cache_5.reset_RST(ARG_rst_in);
  INST_cache_4.reset_RST(ARG_rst_in);
  INST_cache_3.reset_RST(ARG_rst_in);
  INST_cache_2.reset_RST(ARG_rst_in);
  INST_cache_1.reset_RST(ARG_rst_in);
  INST_cache_0.reset_RST(ARG_rst_in);
  INST__unnamed_.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkCacheFIFOF::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkCacheFIFOF::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST__unnamed_.dump_state(indent + 2u);
  INST_cache_0.dump_state(indent + 2u);
  INST_cache_1.dump_state(indent + 2u);
  INST_cache_2.dump_state(indent + 2u);
  INST_cache_3.dump_state(indent + 2u);
  INST_cache_4.dump_state(indent + 2u);
  INST_cache_5.dump_state(indent + 2u);
  INST_cache_6.dump_state(indent + 2u);
  INST_cache_7.dump_state(indent + 2u);
  INST_mem_memory.dump_state(indent + 2u);
  INST_mem_pwClear.dump_state(indent + 2u);
  INST_mem_pwDequeue.dump_state(indent + 2u);
  INST_mem_pwEnqueue.dump_state(indent + 2u);
  INST_mem_rCache.dump_state(indent + 2u);
  INST_mem_rRdPtr.dump_state(indent + 2u);
  INST_mem_rWrPtr.dump_state(indent + 2u);
  INST_mem_wDataIn.dump_state(indent + 2u);
  INST_mem_wDataOut.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkCacheFIFOF::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 31u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_mem_pwClear_whas___d7", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14", 76u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cache_0__h3608", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65", 256u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66", 384u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "cache_7_0_CONCAT_cache_6_9___d64", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_pwClear_whas____d1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_rCache___d23", 76u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1433", 11u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1507", 11u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "enQdeQ", 512u);
  num = INST__unnamed_.dump_VCD_defs(num);
  num = INST_cache_0.dump_VCD_defs(num);
  num = INST_cache_1.dump_VCD_defs(num);
  num = INST_cache_2.dump_VCD_defs(num);
  num = INST_cache_3.dump_VCD_defs(num);
  num = INST_cache_4.dump_VCD_defs(num);
  num = INST_cache_5.dump_VCD_defs(num);
  num = INST_cache_6.dump_VCD_defs(num);
  num = INST_cache_7.dump_VCD_defs(num);
  num = INST_mem_memory.dump_VCD_defs(num);
  num = INST_mem_pwClear.dump_VCD_defs(num);
  num = INST_mem_pwDequeue.dump_VCD_defs(num);
  num = INST_mem_pwEnqueue.dump_VCD_defs(num);
  num = INST_mem_rCache.dump_VCD_defs(num);
  num = INST_mem_rRdPtr.dump_VCD_defs(num);
  num = INST_mem_rWrPtr.dump_VCD_defs(num);
  num = INST_mem_wDataIn.dump_VCD_defs(num);
  num = INST_mem_wDataOut.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkCacheFIFOF::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCacheFIFOF &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkCacheFIFOF::vcd_defs(tVCDDumpType dt, MOD_mkCacheFIFOF &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 76u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 256u);
    vcd_write_x(sim_hdl, num++, 384u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 76u);
    vcd_write_x(sim_hdl, num++, 11u);
    vcd_write_x(sim_hdl, num++, 11u);
    vcd_write_x(sim_hdl, num++, 512u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_NOT_mem_pwClear_whas___d7) != DEF_NOT_mem_pwClear_whas___d7)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_mem_pwClear_whas___d7, 1u);
	backing.DEF_NOT_mem_pwClear_whas___d7 = DEF_NOT_mem_pwClear_whas___d7;
      }
      ++num;
      if ((backing.DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53) != DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53, 1u);
	backing.DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53 = DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14) != DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14, 76u);
	backing.DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14 = DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14;
      }
      ++num;
      if ((backing.DEF_cache_0__h3608) != DEF_cache_0__h3608)
      {
	vcd_write_val(sim_hdl, num, DEF_cache_0__h3608, 64u);
	backing.DEF_cache_0__h3608 = DEF_cache_0__h3608;
      }
      ++num;
      if ((backing.DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65) != DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65)
      {
	vcd_write_val(sim_hdl, num, DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65, 256u);
	backing.DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65 = DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65;
      }
      ++num;
      if ((backing.DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66) != DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66)
      {
	vcd_write_val(sim_hdl, num, DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66, 384u);
	backing.DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66 = DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66;
      }
      ++num;
      if ((backing.DEF_cache_7_0_CONCAT_cache_6_9___d64) != DEF_cache_7_0_CONCAT_cache_6_9___d64)
      {
	vcd_write_val(sim_hdl, num, DEF_cache_7_0_CONCAT_cache_6_9___d64, 128u);
	backing.DEF_cache_7_0_CONCAT_cache_6_9___d64 = DEF_cache_7_0_CONCAT_cache_6_9___d64;
      }
      ++num;
      if ((backing.DEF_mem_pwClear_whas____d1) != DEF_mem_pwClear_whas____d1)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_pwClear_whas____d1, 1u);
	backing.DEF_mem_pwClear_whas____d1 = DEF_mem_pwClear_whas____d1;
      }
      ++num;
      if ((backing.DEF_mem_rCache___d23) != DEF_mem_rCache___d23)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_rCache___d23, 76u);
	backing.DEF_mem_rCache___d23 = DEF_mem_rCache___d23;
      }
      ++num;
      if ((backing.DEF_x__h1433) != DEF_x__h1433)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1433, 11u);
	backing.DEF_x__h1433 = DEF_x__h1433;
      }
      ++num;
      if ((backing.DEF_x__h1507) != DEF_x__h1507)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1507, 11u);
	backing.DEF_x__h1507 = DEF_x__h1507;
      }
      ++num;
      if ((backing.PORT_enQdeQ) != PORT_enQdeQ)
      {
	vcd_write_val(sim_hdl, num, PORT_enQdeQ, 512u);
	backing.PORT_enQdeQ = PORT_enQdeQ;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_NOT_mem_pwClear_whas___d7, 1u);
      backing.DEF_NOT_mem_pwClear_whas___d7 = DEF_NOT_mem_pwClear_whas___d7;
      vcd_write_val(sim_hdl, num++, DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53, 1u);
      backing.DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53 = DEF_NOT_mem_rRdPtr_read__7_PLUS_512_1_EQ_mem_rWrPt_ETC___d53;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14, 76u);
      backing.DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14 = DEF__1_CONCAT_mem_rWrPtr_read_CONCAT_IF_mem_wDataIn_ETC___d14;
      vcd_write_val(sim_hdl, num++, DEF_cache_0__h3608, 64u);
      backing.DEF_cache_0__h3608 = DEF_cache_0__h3608;
      vcd_write_val(sim_hdl, num++, DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65, 256u);
      backing.DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65 = DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d65;
      vcd_write_val(sim_hdl, num++, DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66, 384u);
      backing.DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66 = DEF_cache_7_0_CONCAT_cache_6_9_4_CONCAT_cache_5_8__ETC___d66;
      vcd_write_val(sim_hdl, num++, DEF_cache_7_0_CONCAT_cache_6_9___d64, 128u);
      backing.DEF_cache_7_0_CONCAT_cache_6_9___d64 = DEF_cache_7_0_CONCAT_cache_6_9___d64;
      vcd_write_val(sim_hdl, num++, DEF_mem_pwClear_whas____d1, 1u);
      backing.DEF_mem_pwClear_whas____d1 = DEF_mem_pwClear_whas____d1;
      vcd_write_val(sim_hdl, num++, DEF_mem_rCache___d23, 76u);
      backing.DEF_mem_rCache___d23 = DEF_mem_rCache___d23;
      vcd_write_val(sim_hdl, num++, DEF_x__h1433, 11u);
      backing.DEF_x__h1433 = DEF_x__h1433;
      vcd_write_val(sim_hdl, num++, DEF_x__h1507, 11u);
      backing.DEF_x__h1507 = DEF_x__h1507;
      vcd_write_val(sim_hdl, num++, PORT_enQdeQ, 512u);
      backing.PORT_enQdeQ = PORT_enQdeQ;
    }
}

void MOD_mkCacheFIFOF::vcd_prims(tVCDDumpType dt, MOD_mkCacheFIFOF &backing)
{
  INST__unnamed_.dump_VCD(dt, backing.INST__unnamed_);
  INST_cache_0.dump_VCD(dt, backing.INST_cache_0);
  INST_cache_1.dump_VCD(dt, backing.INST_cache_1);
  INST_cache_2.dump_VCD(dt, backing.INST_cache_2);
  INST_cache_3.dump_VCD(dt, backing.INST_cache_3);
  INST_cache_4.dump_VCD(dt, backing.INST_cache_4);
  INST_cache_5.dump_VCD(dt, backing.INST_cache_5);
  INST_cache_6.dump_VCD(dt, backing.INST_cache_6);
  INST_cache_7.dump_VCD(dt, backing.INST_cache_7);
  INST_mem_memory.dump_VCD(dt, backing.INST_mem_memory);
  INST_mem_pwClear.dump_VCD(dt, backing.INST_mem_pwClear);
  INST_mem_pwDequeue.dump_VCD(dt, backing.INST_mem_pwDequeue);
  INST_mem_pwEnqueue.dump_VCD(dt, backing.INST_mem_pwEnqueue);
  INST_mem_rCache.dump_VCD(dt, backing.INST_mem_rCache);
  INST_mem_rRdPtr.dump_VCD(dt, backing.INST_mem_rRdPtr);
  INST_mem_rWrPtr.dump_VCD(dt, backing.INST_mem_rWrPtr);
  INST_mem_wDataIn.dump_VCD(dt, backing.INST_mem_wDataIn);
  INST_mem_wDataOut.dump_VCD(dt, backing.INST_mem_wDataOut);
}
