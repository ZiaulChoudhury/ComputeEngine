=== Generated schedule for mkCacheFIFOF ===

Method schedule
---------------
Method: enq
Ready signal: ! ((mem_rRdPtr.read + 11'd512) == mem_rWrPtr.read)
Sequenced before (restricted): clean
Sequenced after: read
Conflicts: enq, enQdeQ, dummy
 
Method: enQdeQ
Ready signal: (! ((mem_rRdPtr.read + 11'd512) == mem_rWrPtr.read)) &&
	      (! (mem_rRdPtr.read == mem_rWrPtr.read)) && mem_wDataOut.whas
Conflict-free: clean
Sequenced after: read
Conflicts: enq, enQdeQ, dummy
 
Method: read
Ready signal: True
Conflict-free: read, clean, dummy
Sequenced before: enq, enQdeQ
 
Method: clean
Ready signal: True
Conflict-free: enQdeQ, read, dummy
Sequenced after (restricted): enq
Conflicts: clean
 
Method: dummy
Ready signal: ! ((mem_rRdPtr.read + 11'd512) == mem_rWrPtr.read)
Conflict-free: read, clean
Conflicts: enq, enQdeQ, dummy
 
Rule schedule
-------------
Rule: mem_portA
Predicate: True
Blocking rules: (none)
 
Rule: mem_portB
Predicate: True
Blocking rules: (none)
 
Rule: mem_portB_read_data
Predicate: True
Blocking rules: (none)
 
Logical execution order: read,
			 enq,
			 clean,
			 dummy,
			 mem_portB_read_data,
			 enQdeQ,
			 mem_portA,
			 mem_portB

============================================
